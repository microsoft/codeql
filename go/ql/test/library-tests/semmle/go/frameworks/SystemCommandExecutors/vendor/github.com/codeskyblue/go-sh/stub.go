// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/codeskyblue/go-sh, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/codeskyblue/go-sh (exports: ; functions: Command,InteractiveSession)

// Package go_pkg is a stub of github.com/codeskyblue/go-sh, generated by depstubber.
package go_pkg

import (
	io "io"
	os "os"
	time "time"
)

func Command(_ string, _ ...interface{}) *Session {
	return nil
}

func InteractiveSession() *Session {
	return nil
}

type Session struct {
	Env           map[string]string
	Stdin         io.Reader
	Stdout        io.Writer
	Stderr        io.Writer
	ShowCMD       bool
	PipeFail      bool
	PipeStdErrors bool
}

func (_ *Session) Alias(_ string, _ string, _ ...string) {}

func (_ *Session) Call(_ string, _ ...interface{}) error {
	return nil
}

func (_ *Session) CombinedOutput() ([]byte, error) {
	return nil, nil
}

func (_ *Session) Command(_ string, _ ...interface{}) *Session {
	return nil
}

func (_ *Session) Kill(_ os.Signal) {}

func (_ *Session) Output() ([]byte, error) {
	return nil, nil
}

func (_ *Session) Run() error {
	return nil
}

func (_ *Session) SetDir(_ string) *Session {
	return nil
}

func (_ *Session) SetEnv(_ string, _ string) *Session {
	return nil
}

func (_ *Session) SetInput(_ string) *Session {
	return nil
}

func (_ *Session) SetStdin(_ io.Reader) *Session {
	return nil
}

func (_ *Session) SetTimeout(_ time.Duration) *Session {
	return nil
}

func (_ *Session) Start() error {
	return nil
}

func (_ *Session) Test(_ string, _ string) bool {
	return false
}

func (_ *Session) UnmarshalJSON(_ interface{}) error {
	return nil
}

func (_ *Session) UnmarshalXML(_ interface{}) error {
	return nil
}

func (_ *Session) Wait() error {
	return nil
}

func (_ *Session) WaitTimeout(_ time.Duration) error {
	return nil
}

func (_ *Session) WriteStdout(_ string) error {
	return nil
}
