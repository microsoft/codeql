# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: microsoft/powershell-all
      extensible: typeModel
    data:
    - ["system.boolean", "system.security.cryptography.md5!", "Method[tryhashdata].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aescryptoserviceprovider", "Method[createdecryptor].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmacxof128", "Method[gethashandreset].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha256!", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.md5cng", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.sha1", "system.security.cryptography.sha1!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha1!", "Method[hashdata].ReturnValue"]
    - ["system.threading.tasks.task", "system.security.cryptography.cryptostream", "Method[copytoasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha512", "Member[producelegacyhmacvalues]"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.mldsaopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.int32", "system.security.cryptography.asymmetricalgorithm", "Member[keysize]"]
    - ["system.security.cryptography.cryptographicattributeobject", "system.security.cryptography.cryptographicattributeobjectcollection", "Member[item]"]
    - ["system.int32", "system.security.cryptography.sha384!", "Member[hashsizeinbytes]"]
    - ["system.security.cryptography.keynumber", "system.security.cryptography.keynumber!", "Member[signature]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[exportecprivatekey].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha256!", "Method[hashdataasync].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptostream", "Method[readasync].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.symmetricalgorithm", "Member[modevalue]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[trydecrypt].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[opaquetransportblob]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.rc2", "system.security.cryptography.rc2!", "Method[create].ReturnValue"]
    - ["system.string", "system.security.cryptography.strongnamesignatureinformation", "Member[hashalgorithm]"]
    - ["system.boolean", "system.security.cryptography.mldsa", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.string", "system.security.cryptography.pkcs1maskgenerationmethod", "Member[hashname]"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[attribute]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[generatekey].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetrickeyexchangedeformatter", "Member[parameters]"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[y]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[derivekeyfromhash].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.descryptoserviceprovider", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_256f]"]
    - ["system.boolean", "system.security.cryptography.mldsa", "Method[verifydatacore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaoaepkeyexchangedeformatter", "Method[decryptkeyexchange].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.strongnamesignatureinformation", "Member[isvalid]"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importpkcs8privatekey].ReturnValue"]
    - ["system.string", "system.security.cryptography.oid", "Member[value]"]
    - ["system.security.cryptography.keysizes", "system.security.cryptography.aesgcm!", "Member[tagbytesizes]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha1!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha1managed", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tobase64transform", "Member[cantransformmultipleblocks]"]
    - ["system.byte[]", "system.security.cryptography.sha3_384!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tripledescryptoserviceprovider", "Member[keysize]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.rsaencryptionpadding", "Member[oaephashalgorithm]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.symmetricalgorithm", "Member[legalblocksizes]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_192f]"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[all]"]
    - ["system.security.cryptography.mlkemalgorithm", "system.security.cryptography.mlkemalgorithm!", "Member[mlkem1024]"]
    - ["system.int32", "system.security.cryptography.hmacsha1!", "Member[hashsizeinbits]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.kmac128!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.ecparameters", "Member[curve]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp384t1]"]
    - ["system.int32", "system.security.cryptography.rijndaelmanagedtransform", "Member[blocksizevalue]"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[overwriteexistingkey]"]
    - ["system.byte[]", "system.security.cryptography.shake256", "Method[getcurrenthash].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.tripledescryptoserviceprovider", "Member[legalkeysizes]"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngalgorithmgroup!", "Member[ecdiffiehellman]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve!", "Method[createfromoid].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha512!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[sha384]"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[tryencryptcfbcore].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.safeevppkeyhandle!", "Method[openprivatekeyfromengine].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha384!", "Method[hashdataasync].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rsaopenssl", "Member[keysize]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[tobytearray].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdsa", "Member[keyexchangealgorithm]"]
    - ["system.boolean", "system.security.cryptography.slhdsa", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha384", "Method[tryhashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha3_512!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsacng", "Method[createsignature].ReturnValue"]
    - ["system.security.cryptography.oid", "system.security.cryptography.oid!", "Method[fromoidvalue].ReturnValue"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationparameters", "Member[keycreationoptions]"]
    - ["system.int32", "system.security.cryptography.md5!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_384!", "Method[hashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsa", "Method[toxmlstring].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha384", "Member[key]"]
    - ["system.boolean", "system.security.cryptography.mlkem", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha3_512!", "Method[tryhashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.slhdsa", "Method[exportencryptedpkcs8privatekeypem].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[nistp521]"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptcfb].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptographicoperations!", "Method[tryhmacdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha256!", "Member[hashsizeinbits]"]
    - ["system.security.cryptography.frombase64transformmode", "system.security.cryptography.frombase64transformmode!", "Member[ignorewhitespaces]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportrsaprivatekey].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsacng", "Member[signaturealgorithm]"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importfromencryptedpem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.safeevppkeyhandle", "Member[isinvalid]"]
    - ["system.int32", "system.security.cryptography.rsaencryptionpadding", "Method[gethashcode].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.cryptographicoperations!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake128s]"]
    - ["system.boolean", "system.security.cryptography.ecalgorithm", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptographicoperations!", "Method[fixedtimeequals].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdsaopenssl", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rc2", "Member[keysize]"]
    - ["system.int32", "system.security.cryptography.mldsa", "Method[exportmldsapublickey].ReturnValue"]
    - ["system.security.cryptography.cnguiprotectionlevels", "system.security.cryptography.cnguiprotectionlevels!", "Member[protectkey]"]
    - ["system.int32", "system.security.cryptography.sha1!", "Member[hashsizeinbits]"]
    - ["system.byte[]", "system.security.cryptography.shake128", "Method[getcurrenthash].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsaoaepkeyexchangeformatter", "Member[parameters]"]
    - ["system.boolean", "system.security.cryptography.hmacsha384!", "Method[tryhashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[decryptecb].ReturnValue"]
    - ["system.security.cryptography.dataprotectionscope", "system.security.cryptography.dataprotectionscope!", "Member[localmachine]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha384cng", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[untrustedrootcertificate]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[verifysignaturecore].ReturnValue"]
    - ["system.security.cryptography.asymmetricalgorithm", "system.security.cryptography.asymmetricalgorithm!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hashalgorithmname!", "Method[op_equality].ReturnValue"]
    - ["system.security.cryptography.dataprotectionscope", "system.security.cryptography.dataprotectionscope!", "Member[currentuser]"]
    - ["system.security.cryptography.cngpropertycollection", "system.security.cryptography.cngkeycreationparameters", "Member[parameters]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmacxof256", "Method[getcurrenthash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.eccurve", "Member[isnamed]"]
    - ["system.boolean", "system.security.cryptography.cngkeyblobformat!", "Method[op_inequality].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rijndaelmanagedtransform", "Member[inputblocksize]"]
    - ["system.int32", "system.security.cryptography.slhdsa", "Method[signdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mldsa", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["t[]", "system.security.cryptography.randomnumbergenerator!", "Method[getitems].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[signdata].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake128f]"]
    - ["system.boolean", "system.security.cryptography.cngkey", "Method[hasproperty].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[pathlengthconstraintviolated]"]
    - ["system.boolean", "system.security.cryptography.hmacsha1", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[rsa]"]
    - ["system.byte[]", "system.security.cryptography.protecteddata!", "Method[unprotect].ReturnValue"]
    - ["system.object", "system.security.cryptography.cryptographicattributeobjectcollection", "Member[syncroot]"]
    - ["system.security.cryptography.dsasignatureformat", "system.security.cryptography.dsasignatureformat!", "Member[ieeep1363fixedfieldconcatenation]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportrsaprivatekeypem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mlkem", "Method[tryexportpkcs8privatekeycore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sp800108hmaccounterkdf", "Method[derivekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportdecapsulationkey].ReturnValue"]
    - ["system.security.cryptography.pemfields", "system.security.cryptography.pemencoding!", "Method[findutf8].ReturnValue"]
    - ["system.security.cryptography.hmac", "system.security.cryptography.hmac!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.derivebytes", "Method[getbytes].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacmd5!", "Method[hashdataasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellmancng", "Member[usesecretagreementashmackey]"]
    - ["system.int32", "system.security.cryptography.mldsaalgorithm", "Member[privateseedsizeinbytes]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha1!", "Method[hashdataasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsasignaturepadding!", "Method[op_inequality].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[encryptcbc].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[encryptvalue].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[signdata].ReturnValue"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.rijndaelmanaged", "Member[padding]"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptcfbcore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider", "Method[verifydata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha384!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hashalgorithm", "Member[cantransformmultipleblocks]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryhashdata].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[issuerchainingerror]"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellman", "Method[tryexportecprivatekey].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.mlkemopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[tryencryptcbccore].ReturnValue"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkeyusages!", "Member[keyagreement]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Method[fromoid].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.ciphermode!", "Member[cts]"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importslhdsapublickey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.shake128!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hashalgorithm", "Member[canreusetransform]"]
    - ["system.boolean", "system.security.cryptography.cngalgorithmgroup!", "Method[op_equality].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsaencryptionpadding", "Method[tostring].ReturnValue"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[useexistingkey]"]
    - ["system.nullable", "system.security.cryptography.cngkeycreationparameters", "Member[exportpolicy]"]
    - ["system.byte[]", "system.security.cryptography.cryptoconfig!", "Method[encodeoid].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.tripledescryptoserviceprovider", "Member[legalblocksizes]"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[trydecryptcfbcore].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdiffiehellman", "Member[keyexchangealgorithm]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importprivateseed].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cngprovider", "Method[gethashcode].ReturnValue"]
    - ["system.intptr", "system.security.cryptography.cryptoapitransform", "Member[keyhandle]"]
    - ["system.boolean", "system.security.cryptography.rsacryptoserviceprovider", "Member[publiconly]"]
    - ["system.string", "system.security.cryptography.cspkeycontainerinfo", "Member[uniquekeycontainername]"]
    - ["system.int32", "system.security.cryptography.oidcollection", "Member[count]"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[b]"]
    - ["system.int32", "system.security.cryptography.sha3_384!", "Member[hashsizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider", "Method[verifyhash].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha384!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importfrompem].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsa", "Method[signdatacore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[verifysignature].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[verifydatacore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hkdf!", "Method[expand].ReturnValue"]
    - ["system.security.cryptography.mlkemalgorithm", "system.security.cryptography.mlkemalgorithm!", "Member[mlkem512]"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptecbcore].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsaopenssl", "Method[exportparameters].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dpapidataprotector", "Member[prependhashedpurposetoplaintext]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[systemerror]"]
    - ["system.security.cryptography.cngpropertyoptions", "system.security.cryptography.cngpropertyoptions!", "Member[persist]"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Method[createoaep].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[inverseq]"]
    - ["system.int32", "system.security.cryptography.hmacsha3_512!", "Member[hashsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.dsa", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.kmac128", "system.security.cryptography.kmac128", "Method[clone].ReturnValue"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[noflags]"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha384]"]
    - ["system.security.cryptography.ecdiffiehellmankeyderivationfunction", "system.security.cryptography.ecdiffiehellmancng", "Member[keyderivationfunction]"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[accessible]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha384]"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.ciphermode!", "Member[ecb]"]
    - ["system.boolean", "system.security.cryptography.des!", "Method[issemiweakkey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha256managed", "Method[hashfinal].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.kmacxof128!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve!", "Method[createfromvalue].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.icryptotransform", "Member[canreusetransform]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake256f]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.paddingmode!", "Member[zeros]"]
    - ["system.string", "system.security.cryptography.rsapkcs1keyexchangeformatter", "Member[parameters]"]
    - ["system.security.cryptography.cngprovider", "system.security.cryptography.cngkeycreationparameters", "Member[provider]"]
    - ["system.security.cryptography.sha3_384", "system.security.cryptography.sha3_384!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsaopenssl", "Method[verifyhash].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha512]"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha3_256]"]
    - ["system.string", "system.security.cryptography.dsacng", "Member[keyexchangealgorithm]"]
    - ["system.boolean", "system.security.cryptography.pemencoding!", "Method[tryfindutf8].ReturnValue"]
    - ["system.security.cryptography.memoryprotectionscope", "system.security.cryptography.memoryprotectionscope!", "Member[crossprocess]"]
    - ["system.security.securestring", "system.security.cryptography.cspparameters", "Member[keypassword]"]
    - ["system.int32", "system.security.cryptography.hmacsha512", "Member[hashsize]"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[signaturealgorithm]"]
    - ["system.security.cryptography.cryptographicattributeobjectenumerator", "system.security.cryptography.cryptographicattributeobjectcollection", "Method[getenumerator].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmacxof128!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha384cryptoserviceprovider", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha384!", "Member[hashsizeinbits]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp512r1]"]
    - ["system.int32", "system.security.cryptography.pbeparameters", "Member[iterationcount]"]
    - ["system.security.cryptography.memoryprotectionscope", "system.security.cryptography.memoryprotectionscope!", "Member[sameprocess]"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Member[encapsulationkeysizeinbytes]"]
    - ["system.security.cryptography.hashalgorithm", "system.security.cryptography.signaturedescription", "Method[createdigest].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[derivekeyfromhash].ReturnValue"]
    - ["system.security.cryptography.cngpropertyoptions", "system.security.cryptography.cngproperty", "Member[options]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[derivekeytls].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha256!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[tryencryptecbcore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hashalgorithm", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[machinekey]"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.aesmanaged", "Member[mode]"]
    - ["system.security.cryptography.des", "system.security.cryptography.des!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.frombase64transform", "Member[canreusetransform]"]
    - ["system.security.cryptography.ecdiffiehellmancngpublickey", "system.security.cryptography.ecdiffiehellmancngpublickey!", "Method[fromxmlstring].ReturnValue"]
    - ["system.range", "system.security.cryptography.pemfields", "Member[location]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[unknowncriticalextension]"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[protected]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha256]"]
    - ["system.security.cryptography.sha3_256", "system.security.cryptography.sha3_256!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha384!", "Member[hashsizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.dsacng", "Method[trycreatesignaturecore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[exponent]"]
    - ["system.boolean", "system.security.cryptography.cngprovider!", "Method[op_equality].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Member[secretappend]"]
    - ["system.byte[]", "system.security.cryptography.incrementalhash", "Method[getcurrenthash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[exportable]"]
    - ["system.int32", "system.security.cryptography.incrementalhash", "Member[hashlengthinbytes]"]
    - ["system.security.cryptography.ecdiffiehellmankeyderivationfunction", "system.security.cryptography.ecdiffiehellmankeyderivationfunction!", "Member[hmac]"]
    - ["system.byte[]", "system.security.cryptography.kmacxof128", "Method[getcurrenthash].ReturnValue"]
    - ["system.collections.ienumerator", "system.security.cryptography.oidcollection", "Method[getenumerator].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecalgorithm", "Method[exportparameters].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha512!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.ecdsa", "Method[signhash].ReturnValue"]
    - ["system.security.cryptography.cryptographicattributeobject", "system.security.cryptography.cryptographicattributeobjectenumerator", "Member[current]"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[removable]"]
    - ["system.byte[]", "system.security.cryptography.kmac256", "Method[gethashandreset].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha3_256!", "Member[hashsizeinbytes]"]
    - ["system.string", "system.security.cryptography.cngalgorithmgroup", "Member[algorithmgroup]"]
    - ["system.string", "system.security.cryptography.mldsa", "Method[exportsubjectpublickeyinfopem].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Member[key]"]
    - ["system.int32", "system.security.cryptography.frombase64transform", "Method[transformblock].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngkey", "Member[isephemeral]"]
    - ["system.int32", "system.security.cryptography.ecdiffiehellmancng", "Member[keysize]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_512!", "Member[issupported]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.kmacxof256!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.sha384", "system.security.cryptography.sha384!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptcbc].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.asymmetricalgorithm", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.sha1managed", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[none]"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Member[ivvalue]"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[encryptvalue].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdiffiehellmanp256]"]
    - ["system.security.cryptography.incrementalhash", "system.security.cryptography.incrementalhash!", "Method[createhash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider", "Method[verifysignature].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptecbcore].ReturnValue"]
    - ["system.string", "system.security.cryptography.randomnumbergenerator!", "Method[getstring].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.icspasymmetricalgorithm", "Method[exportcspblob].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha3_256]"]
    - ["system.security.cryptography.md5", "system.security.cryptography.md5!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha1!", "Member[hashsizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.hashalgorithm", "Method[trycomputehash].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp512t1]"]
    - ["system.int32", "system.security.cryptography.mldsa", "Method[signdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha512!", "Member[hashsizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.rsacryptoserviceprovider", "Method[verifydata].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aescng", "Method[createdecryptor].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.shake128", "Method[read].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[genericprivateblob]"]
    - ["system.int32", "system.security.cryptography.slhdsaalgorithm", "Member[signaturesizeinbytes]"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.ciphermode!", "Member[cfb]"]
    - ["system.boolean", "system.security.cryptography.hmacsha384", "Member[producelegacyhmacvalues]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha384", "Method[hashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaopenssl", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.frombase64transform", "Member[outputblocksize]"]
    - ["system.string", "system.security.cryptography.ecdiffiehellmancng", "Method[toxmlstring].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rijndaelmanagedtransform", "Method[transformfinalblock].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidtimeperiodnesting]"]
    - ["system.byte[]", "system.security.cryptography.dataprotector", "Method[providerprotect].ReturnValue"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importmldsapublickey].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.tripledescng", "Member[legalkeysizes]"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[keysizevalue]"]
    - ["system.boolean", "system.security.cryptography.mlkemalgorithm!", "Method[op_equality].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake256s]"]
    - ["system.security.cryptography.cspkeycontainerinfo", "system.security.cryptography.icspasymmetricalgorithm", "Member[cspkeycontainerinfo]"]
    - ["system.collections.ienumerator", "system.security.cryptography.asnencodeddatacollection", "Method[getenumerator].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacmd5", "Member[hashsize]"]
    - ["system.byte[]", "system.security.cryptography.passwordderivebytes", "Member[salt]"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngexportpolicies!", "Member[allowexport]"]
    - ["system.intptr", "system.security.cryptography.cngkeycreationparameters", "Member[parentwindowhandle]"]
    - ["system.byte[]", "system.security.cryptography.kmac256", "Method[getcurrenthash].ReturnValue"]
    - ["system.security.cryptography.randomnumbergenerator", "system.security.cryptography.rsapkcs1keyexchangedeformatter", "Member[rng]"]
    - ["system.boolean", "system.security.cryptography.mlkemalgorithm", "Method[equals].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[verifydata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha1", "Member[hashsize]"]
    - ["system.byte[]", "system.security.cryptography.sha384!", "Method[hashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.dsa", "Method[toxmlstring].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[decryptcfb].ReturnValue"]
    - ["system.string", "system.security.cryptography.asnencodeddata", "Method[format].ReturnValue"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkey", "Member[keyusage]"]
    - ["system.boolean", "system.security.cryptography.shake256!", "Member[issupported]"]
    - ["system.boolean", "system.security.cryptography.rsaencryptionpadding!", "Method[op_equality].ReturnValue"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[usemachinekeystore]"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellmancng", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha1", "Member[key]"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Method[exportpkcs8privatekeypem].ReturnValue"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importdecapsulationkey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha256cng", "Method[hashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[exportsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.cnguiprotectionlevels", "system.security.cryptography.cnguiprotectionlevels!", "Member[none]"]
    - ["system.int32", "system.security.cryptography.pemencoding!", "Method[getencodedsize].ReturnValue"]
    - ["system.security.cryptography.asnencodeddata", "system.security.cryptography.asnencodeddatacollection", "Member[item]"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.slhdsaopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.incrementalhash", "Method[trygethashandreset].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptcbccore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[dq]"]
    - ["system.boolean", "system.security.cryptography.hmacsha512", "Method[tryhashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportencapsulationkey].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha256]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rijndaelmanaged", "Member[iv]"]
    - ["system.security.cryptography.rsasignaturepadding", "system.security.cryptography.rsasignaturepadding!", "Member[pss]"]
    - ["system.byte[]", "system.security.cryptography.tripledescng", "Member[key]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha3_512]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[unknownverificationaction]"]
    - ["system.int32", "system.security.cryptography.tripledescng", "Member[keysize]"]
    - ["system.string", "system.security.cryptography.cngkey", "Member[uniquename]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsacng", "Method[exportparameters].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpaddingmode", "system.security.cryptography.rsaencryptionpaddingmode!", "Member[oaep]"]
    - ["system.byte[]", "system.security.cryptography.sha256!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[decryptvalue].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.md5!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.dataprotectionscope", "system.security.cryptography.dpapidataprotector", "Member[scope]"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[characteristic2]"]
    - ["system.byte[]", "system.security.cryptography.md5cryptoserviceprovider", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.rsaparameters", "system.security.cryptography.rsacng", "Method[exportparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha256cryptoserviceprovider", "Method[hashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[seed]"]
    - ["system.security.cryptography.rsasignaturepaddingmode", "system.security.cryptography.rsasignaturepaddingmode!", "Member[pss]"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[usearchivablekey]"]
    - ["system.string", "system.security.cryptography.rsacryptoserviceprovider", "Member[signaturealgorithm]"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[getciphertextlengthecb].ReturnValue"]
    - ["system.int32", "system.security.cryptography.oidcollection", "Method[add].ReturnValue"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.cngkey!", "Method[open].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["microsoft.win32.safehandles.safencryptkeyhandle", "system.security.cryptography.cngkey", "Member[handle]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rijndaelmanaged", "Member[blocksize]"]
    - ["system.boolean", "system.security.cryptography.rsaencryptionpadding", "Method[equals].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[encryptcfb].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha512!", "Member[hashsizeinbits]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[verifydatacore].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificaterevoked]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptostream", "Method[flushfinalblockasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngkey", "Member[ismachinekey]"]
    - ["system.int32", "system.security.cryptography.icryptotransform", "Member[outputblocksize]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importfromencryptedpem].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsaoaepkeyexchangedeformatter", "Member[parameters]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_192s]"]
    - ["system.string", "system.security.cryptography.rsa", "Method[exportrsapublickeypem].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha3_384!", "Member[hashsizeinbits]"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[modulus]"]
    - ["system.byte[]", "system.security.cryptography.dsa", "Method[signdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[decryptecb].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[signhashcore].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.shake256!", "Method[hashdataasync].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dataprotector", "Method[gethashedpurpose].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmac", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cryptographicattributeobjectcollection", "Method[add].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aes", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Member[hmackey]"]
    - ["system.boolean", "system.security.cryptography.rijndaelmanagedtransform", "Member[canreusetransform]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsa", "Member[algorithm]"]
    - ["system.byte[]", "system.security.cryptography.shake256!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.asymmetricalgorithm", "system.security.cryptography.strongnamesignatureinformation", "Member[publickey]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_512", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.md5!", "Member[hashsizeinbytes]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[missingsignature]"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellman", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha3_512!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.oidenumerator", "system.security.cryptography.oidcollection", "Method[getenumerator].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecalgorithm", "Method[tryexportecprivatekeypem].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_256!", "Method[hashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.cspkeycontainerinfo", "Member[keycontainername]"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[encryptecb].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[badsignatureformat]"]
    - ["system.int32", "system.security.cryptography.dsaopenssl", "Member[keysize]"]
    - ["system.boolean", "system.security.cryptography.protecteddata!", "Method[tryunprotect].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.rijndaelmanaged", "Member[mode]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha3_256!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[eccpublicblob]"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.safeevppkeyhandle!", "Method[openpublickeyfromengine].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cspparameters", "Member[providertype]"]
    - ["system.security.cryptography.keysizes", "system.security.cryptography.aesgcm!", "Member[noncebytesizes]"]
    - ["system.security.cryptography.oid", "system.security.cryptography.oidcollection", "Member[item]"]
    - ["system.int32", "system.security.cryptography.sha256!", "Method[hashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.signaturedescription", "Member[digestalgorithm]"]
    - ["system.int32", "system.security.cryptography.cryptoapitransform", "Member[outputblocksize]"]
    - ["system.string", "system.security.cryptography.cngproperty", "Member[name]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.ecdiffiehellmancng", "Member[legalkeysizes]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.symmetricalgorithm", "Member[legalblocksizesvalue]"]
    - ["system.int32", "system.security.cryptography.sha3_512!", "Member[hashsizeinbits]"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider", "Member[publiconly]"]
    - ["system.int32", "system.security.cryptography.asymmetricalgorithm", "Member[keysizevalue]"]
    - ["system.byte[]", "system.security.cryptography.cngkey", "Method[export].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[verifyhash].ReturnValue"]
    - ["system.int32", "system.security.cryptography.ecdsa", "Method[getmaxsignaturesize].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacmd5", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdsap521]"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[polynomial]"]
    - ["system.int32", "system.security.cryptography.rijndaelmanaged", "Member[keysize]"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[blocksizevalue]"]
    - ["system.security.cryptography.asnencodeddatacollection", "system.security.cryptography.cryptographicattributeobject", "Member[values]"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[tryencryptecbcore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asnencodeddatacollection", "Member[issynchronized]"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mldsa!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.hmacmd5", "Member[key]"]
    - ["system.int64", "system.security.cryptography.safeevppkeyhandle!", "Member[opensslversion]"]
    - ["system.collections.ienumerator", "system.security.cryptography.cryptographicattributeobjectcollection", "Method[getenumerator].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Member[secretprepend]"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[randomlygenerated]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Method[derivekeymaterial].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tripledescryptoserviceprovider", "Member[blocksize]"]
    - ["system.boolean", "system.security.cryptography.sha3_512!", "Member[issupported]"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[noprompt]"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Member[outputblocksize]"]
    - ["system.int32", "system.security.cryptography.rijndaelmanagedtransform", "Method[transformblock].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[encryptecb].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.tripledescng", "Method[createencryptor].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha256cryptoserviceprovider", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importslhdsasecretkey].ReturnValue"]
    - ["system.security.cryptography.incrementalhash", "system.security.cryptography.incrementalhash!", "Method[createhmac].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha1!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.symmetricalgorithm", "Member[mode]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.rc2cryptoserviceprovider", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.oid", "system.security.cryptography.asnencodeddata", "Member[oid]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcountersignature]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmancng", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha1cng", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[blocksize]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[trysigndata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.aesmanaged", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.rsaopenssl", "Method[encrypt].ReturnValue"]
    - ["system.security.accesscontrol.cryptokeysecurity", "system.security.cryptography.cspkeycontainerinfo", "Member[cryptokeysecurity]"]
    - ["system.int32", "system.security.cryptography.rsa", "Method[encrypt].ReturnValue"]
    - ["system.int32", "system.security.cryptography.ecdsacng", "Member[keysize]"]
    - ["system.int32", "system.security.cryptography.strongnamesignatureinformation", "Member[hresult]"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[trydecryptcbccore].ReturnValue"]
    - ["system.security.cryptography.cngkeyhandleopenoptions", "system.security.cryptography.cngkeyhandleopenoptions!", "Member[none]"]
    - ["system.byte[]", "system.security.cryptography.incrementalhash", "Method[gethashandreset].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsacng", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake192f]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha3_384]"]
    - ["system.byte[]", "system.security.cryptography.kmac256!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cspkeycontainerinfo", "Member[providertype]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[trycreatesignaturecore].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aes", "Member[legalblocksizes]"]
    - ["system.security.cryptography.oid", "system.security.cryptography.cryptographicattributeobject", "Member[oid]"]
    - ["system.boolean", "system.security.cryptography.asnencodeddataenumerator", "Method[movenext].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdiffiehellman", "Member[signaturealgorithm]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryencrypt].ReturnValue"]
    - ["system.iasyncresult", "system.security.cryptography.cryptostream", "Method[beginread].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rsacryptoserviceprovider", "Member[keysize]"]
    - ["system.byte[]", "system.security.cryptography.hmac", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.dsasignatureformatter", "Method[createsignature].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider!", "Member[usemachinekeystore]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.kmac256!", "Method[hashdataasync].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.cryptoapitransform", "Method[transformfinalblock].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsaopenssl", "Method[verifysignature].ReturnValue"]
    - ["system.security.cryptography.rsasignaturepadding", "system.security.cryptography.rsasignaturepadding!", "Member[pkcs1]"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[decrypt].ReturnValue"]
    - ["system.string", "system.security.cryptography.cngalgorithmgroup", "Method[tostring].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.aescryptoserviceprovider", "Member[iv]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha512!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.rijndaelmanaged", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.ecdsaopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.security.cryptography.asymmetricsignaturedeformatter", "system.security.cryptography.signaturedescription", "Method[createdeformatter].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Method[toxmlstring].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[decryptcbc].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[hardwaredevice]"]
    - ["system.int32", "system.security.cryptography.sha256!", "Member[hashsizeinbits]"]
    - ["system.int32", "system.security.cryptography.md5!", "Member[hashsizeinbits]"]
    - ["system.boolean", "system.security.cryptography.tobase64transform", "Member[canreusetransform]"]
    - ["system.string", "system.security.cryptography.slhdsa", "Method[exportsubjectpublickeyinfopem].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tobase64transform", "Method[transformblock].ReturnValue"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve", "Member[curvetype]"]
    - ["system.byte[]", "system.security.cryptography.rsaopenssl", "Method[decrypt].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.tripledes", "Member[legalkeysizes]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_512", "Method[tryhashfinal].ReturnValue"]
    - ["system.string", "system.security.cryptography.cnguipolicy", "Member[usecontext]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.kmacxof128", "system.security.cryptography.kmacxof128", "Method[clone].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dpapidataprotector", "Method[providerprotect].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha256", "Member[hashsize]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp192t1]"]
    - ["system.int32", "system.security.cryptography.dsa", "Method[getmaxsignaturesize].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.kmac256!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.ecalgorithm", "Method[exportecprivatekey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mldsa", "Method[exportmldsaprivateseed].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[derivekeyfromhmac].ReturnValue"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.dsacng", "Member[key]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.shake128!", "Method[hashdataasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptoapitransform", "Member[cantransformmultipleblocks]"]
    - ["system.int32", "system.security.cryptography.hmacsha3_256!", "Member[hashsizeinbits]"]
    - ["system.int32", "system.security.cryptography.cspparameters", "Member[keynumber]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_256", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_512!", "Method[tryhashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.eccurve", "Member[ischaracteristic2]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_512", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha512", "Member[key]"]
    - ["system.int32", "system.security.cryptography.cryptostream", "Method[endread].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellman", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.int32", "system.security.cryptography.incrementalhash", "Method[getcurrenthash].ReturnValue"]
    - ["system.security.cryptography.ecdiffiehellmanpublickey", "system.security.cryptography.ecdiffiehellmanopenssl", "Member[publickey]"]
    - ["system.security.cryptography.cngprovider", "system.security.cryptography.cngkey", "Member[provider]"]
    - ["system.boolean", "system.security.cryptography.kmacxof128!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[cofactor]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmac128!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.symmetricalgorithm", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_256", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[keyderivationfunction]"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[seed]"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[primemontgomery]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[derivekeyfromhmac].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha256!", "Method[tryhashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Member[keyexchangealgorithm]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha3_384!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.ecdiffiehellmanpublickey", "system.security.cryptography.ecdiffiehellman", "Member[publickey]"]
    - ["system.byte[]", "system.security.cryptography.shake256", "Method[gethashandreset].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mlkem!", "Member[issupported]"]
    - ["system.boolean", "system.security.cryptography.kmacxof256!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.rfc2898derivebytes!", "Method[pbkdf2].ReturnValue"]
    - ["system.nullable", "system.security.cryptography.eccurve", "Member[hash]"]
    - ["system.security.cryptography.rsaparameters", "system.security.cryptography.rsa", "Method[exportparameters].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmancngpublickey", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[j]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeencryptionalgorithm!", "Member[aes128cbc]"]
    - ["system.int32", "system.security.cryptography.icryptotransform", "Method[transformblock].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaopenssl", "Method[signhash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptcbc].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rfc2898derivebytes", "Method[cryptderivekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.shake256", "Method[read].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.icryptotransform", "Method[transformfinalblock].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdiffiehellman", "Method[toxmlstring].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[verifyhash].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[couldnotbuildchain]"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[p]"]
    - ["system.byte[]", "system.security.cryptography.asymmetricalgorithm", "Method[exportsubjectpublickeyinfo].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptostream", "Member[canread]"]
    - ["system.byte[]", "system.security.cryptography.dsacryptoserviceprovider", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha512]"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[decryptvalue].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[encryptcbc].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsacng", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.security.cryptography.shake256", "system.security.cryptography.shake256", "Method[clone].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tobase64transform", "Member[outputblocksize]"]
    - ["system.security.cryptography.sha256", "system.security.cryptography.sha256!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngalgorithmgroup", "Method[equals].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsasignaturedeformatter", "Method[verifysignature].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha1!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngalgorithmgroup!", "Member[diffiehellman]"]
    - ["system.string", "system.security.cryptography.dsacng", "Member[signaturealgorithm]"]
    - ["system.boolean", "system.security.cryptography.chacha20poly1305!", "Member[issupported]"]
    - ["system.boolean", "system.security.cryptography.rsacryptoserviceprovider", "Member[persistkeyincsp]"]
    - ["system.boolean", "system.security.cryptography.hashalgorithm", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngproperty!", "Method[op_equality].ReturnValue"]
    - ["system.int32", "system.security.cryptography.ecdsa", "Method[signdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.signaturedescription", "Member[keyalgorithm]"]
    - ["system.int32", "system.security.cryptography.hmacsha256!", "Member[hashsizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[trycreatesignature].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[decapsulate].ReturnValue"]
    - ["system.threading.tasks.task", "system.security.cryptography.hashalgorithm", "Method[computehashasync].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsa", "Method[createsignaturecore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.pemencoding!", "Method[trywriteutf8].ReturnValue"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngalgorithmgroup!", "Member[dsa]"]
    - ["system.boolean", "system.security.cryptography.oidenumerator", "Method[movenext].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmac128", "Method[getcurrenthash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.kmac128", "Method[gethashandreset].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[feedbacksize]"]
    - ["system.collections.generic.ienumerable", "system.security.cryptography.dataprotector", "Member[specificpurposes]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.aescryptoserviceprovider", "Member[padding]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecalgorithm", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[trydecryptecbcore].ReturnValue"]
    - ["system.string", "system.security.cryptography.pemencoding!", "Method[writestring].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[trysignhash].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.dsacryptoserviceprovider", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportsubjectpublickeyinfo].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Member[keyvalue]"]
    - ["system.byte[]", "system.security.cryptography.ecdsacng", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha1cryptoserviceprovider", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hkdf!", "Method[extract].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tripledescryptoserviceprovider", "Member[feedbacksize]"]
    - ["system.byte[]", "system.security.cryptography.slhdsa", "Method[exportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp320r1]"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[encrypt].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mldsaalgorithm", "Member[publickeysizeinbytes]"]
    - ["system.string", "system.security.cryptography.hashalgorithmname", "Method[tostring].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Member[privateseedsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[p]"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.ecdiffiehellmancngpublickey", "Method[import].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptographicattributeobjectcollection", "Member[issynchronized]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdiffiehellman]"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[extensionorattribute]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[trysigndatacore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[encrypt].ReturnValue"]
    - ["system.security.cryptography.keynumber", "system.security.cryptography.cspkeycontainerinfo", "Member[keynumber]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Method[derivekeyfromhash].ReturnValue"]
    - ["system.security.cryptography.cngkeyopenoptions", "system.security.cryptography.cngkeyopenoptions!", "Member[silent]"]
    - ["system.string", "system.security.cryptography.rsa", "Member[signaturealgorithm]"]
    - ["system.int32", "system.security.cryptography.sha1!", "Member[hashsizeinbytes]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha256!", "Method[hashdataasync].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.asymmetricalgorithm", "Method[exportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[encryptionalgorithm]"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[trysignhashcore].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp384r1]"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[getciphertextlengthcbc].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mldsa", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[feedbacksizevalue]"]
    - ["system.intptr", "system.security.cryptography.cspparameters", "Member[parentwindowhandle]"]
    - ["system.security.cryptography.manifestsignatureinformationcollection", "system.security.cryptography.manifestsignatureinformation!", "Method[verifysignature].ReturnValue"]
    - ["system.string", "system.security.cryptography.slhdsaalgorithm", "Member[name]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[tryexportecprivatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngkeyblobformat", "Method[equals].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidsignercertificate]"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[trydecryptecbcore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsapkcs1keyexchangeformatter", "Method[createkeyexchange].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.rc2cryptoserviceprovider", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.sha3_512", "system.security.cryptography.sha3_512!", "Method[create].ReturnValue"]
    - ["system.string", "system.security.cryptography.mlkem", "Method[exportsubjectpublickeyinfopem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.slhdsa!", "Member[issupported]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsashake192s]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp224t1]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcertificaterole]"]
    - ["system.boolean", "system.security.cryptography.mldsaopenssl", "Method[verifydatacore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptoconfig!", "Member[allowonlyfipsalgorithms]"]
    - ["system.security.cryptography.cnguiprotectionlevels", "system.security.cryptography.cnguiprotectionlevels!", "Member[forcehighprotection]"]
    - ["system.string", "system.security.cryptography.ecdsacng", "Method[toxmlstring].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_384!", "Member[hashsizeinbits]"]
    - ["system.int32", "system.security.cryptography.aesmanaged", "Member[keysize]"]
    - ["system.security.cryptography.x509certificates.authenticodesignatureinformation", "system.security.cryptography.manifestsignatureinformation", "Member[authenticodesignature]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Member[label]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importencryptedpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_256!", "Member[issupported]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp256t1]"]
    - ["system.int32", "system.security.cryptography.rijndaelmanagedtransform", "Member[outputblocksize]"]
    - ["system.int32", "system.security.cryptography.hmacsha256!", "Method[hashdata].ReturnValue"]
    - ["system.object", "system.security.cryptography.cryptographicattributeobjectenumerator", "Member[current]"]
    - ["system.boolean", "system.security.cryptography.cngprovider!", "Method[op_inequality].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha3_384!", "Method[tryhashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.protecteddata!", "Method[protect].ReturnValue"]
    - ["system.security.cryptography.dsaparameters", "system.security.cryptography.dsa", "Method[exportparameters].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsapkcs1keyexchangedeformatter", "Member[parameters]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.tripledes", "Member[legalblocksizes]"]
    - ["system.int32", "system.security.cryptography.cryptographicoperations!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.safeevppkeyhandle", "Method[duplicatehandle].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngalgorithmgroup!", "Method[op_inequality].ReturnValue"]
    - ["microsoft.win32.safehandles.safencryptsecrethandle", "system.security.cryptography.ecdiffiehellmancng", "Method[derivesecretagreementhandle].ReturnValue"]
    - ["system.security.cryptography.ecdiffiehellmanpublickey", "system.security.cryptography.ecdiffiehellmancngpublickey!", "Method[frombytearray].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacng", "Method[verifysignaturecore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[signhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hashalgorithm", "Member[hash]"]
    - ["system.byte[]", "system.security.cryptography.dsacryptoserviceprovider", "Method[createsignature].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[g]"]
    - ["system.byte[]", "system.security.cryptography.tobase64transform", "Method[transformfinalblock].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha384!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[signhash].ReturnValue"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngalgorithmgroup!", "Member[ecdsa]"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[signdata].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[template]"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[primetwistededwards]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha3_512!", "Method[hashdataasync].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdsacng", "Method[signhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[prime]"]
    - ["system.security.manifestkinds", "system.security.cryptography.manifestsignatureinformation", "Member[manifest]"]
    - ["system.boolean", "system.security.cryptography.cspkeycontainerinfo", "Member[machinekeystore]"]
    - ["system.security.cryptography.rijndael", "system.security.cryptography.rijndael!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[trydecryptcbccore].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Method[transformblock].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.object", "system.security.cryptography.cryptoconfig!", "Method[createfromname].ReturnValue"]
    - ["system.string", "system.security.cryptography.hmac", "Member[hashname]"]
    - ["system.int32", "system.security.cryptography.sha512!", "Member[hashsizeinbits]"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[genericpublicblob]"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[createephemeralkey]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdsa]"]
    - ["system.int32", "system.security.cryptography.slhdsa", "Method[exportslhdsapublickey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.tripledescryptoserviceprovider", "Member[key]"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[eccfullprivateblob]"]
    - ["system.security.cryptography.cspkeycontainerinfo", "system.security.cryptography.rsacryptoserviceprovider", "Member[cspkeycontainerinfo]"]
    - ["system.boolean", "system.security.cryptography.cngalgorithm!", "Method[op_inequality].ReturnValue"]
    - ["system.security.cryptography.dsasignatureformat", "system.security.cryptography.dsasignatureformat!", "Member[rfc3279dersequence]"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[x]"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.incrementalhash", "Member[algorithmname]"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[usenonexportablekey]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.string", "system.security.cryptography.cngalgorithm", "Method[tostring].ReturnValue"]
    - ["system.string", "system.security.cryptography.passwordderivebytes", "Member[hashname]"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importfrompem].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_256s]"]
    - ["system.int32", "system.security.cryptography.aescryptoserviceprovider", "Member[keysize]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.paddingmode!", "Member[iso10126]"]
    - ["system.char[]", "system.security.cryptography.pemencoding!", "Method[write].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacmd5!", "Method[tryhashdata].ReturnValue"]
    - ["system.security.cryptography.mldsaalgorithm", "system.security.cryptography.mldsaalgorithm!", "Member[mldsa87]"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Method[gethashcode].ReturnValue"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.rsacng", "Member[key]"]
    - ["system.boolean", "system.security.cryptography.cryptoapitransform", "Member[canreusetransform]"]
    - ["system.byte[]", "system.security.cryptography.rsapkcs1signatureformatter", "Method[createsignature].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsa", "Method[createsignature].ReturnValue"]
    - ["system.string", "system.security.cryptography.mlkem", "Method[exportpkcs8privatekeypem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[trysignhash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacng", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.des!", "Method[isweakkey].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.rsaopenssl", "Member[legalkeysizes]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.ecdsacng", "Member[legalkeysizes]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[trysignhashcore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.tripledescryptoserviceprovider", "Member[iv]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.md5!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.asymmetricsignatureformatter", "system.security.cryptography.signaturedescription", "Method[createformatter].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdsacng", "Method[signdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mldsa", "Method[exportpkcs8privatekey].ReturnValue"]
    - ["microsoft.win32.safehandles.safencryptproviderhandle", "system.security.cryptography.cngkey", "Member[providerhandle]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[derivekeytls].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[hashalgorithm]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeencryptionalgorithm!", "Member[aes256cbc]"]
    - ["system.byte[]", "system.security.cryptography.dsaparameters", "Member[q]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacng", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.kmac256", "system.security.cryptography.kmac256", "Method[clone].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dataprotector", "Member[prependhashedpurposetoplaintext]"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellman", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.cryptographicoperations!", "Method[hmacdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[verifyhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rfc2898derivebytes", "Method[getbytes].ReturnValue"]
    - ["system.security.cryptography.ripemd160", "system.security.cryptography.ripemd160!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rc2cryptoserviceprovider", "Member[usesalt]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptostream", "Method[disposeasync].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Member[inputblocksize]"]
    - ["system.byte[]", "system.security.cryptography.asnencodeddata", "Member[rawdata]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdiffiehellmanp384]"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.ecdsacng", "Member[key]"]
    - ["system.int32", "system.security.cryptography.sha3_512!", "Member[hashsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[exportcspblob].ReturnValue"]
    - ["system.security.cryptography.mldsaalgorithm", "system.security.cryptography.mldsaalgorithm!", "Member[mldsa65]"]
    - ["system.int32", "system.security.cryptography.sha3_256!", "Member[hashsizeinbits]"]
    - ["system.byte[]", "system.security.cryptography.dataprotector", "Method[protect].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellman", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[order]"]
    - ["system.int32", "system.security.cryptography.dsacryptoserviceprovider", "Member[keysize]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importfrompem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha512!", "Method[tryhashdata].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aescng", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[policy]"]
    - ["system.int32", "system.security.cryptography.rc2", "Member[effectivekeysizevalue]"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellmancng", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha1", "Method[hashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.eccurve", "Member[isexplicit]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_256", "Member[key]"]
    - ["system.security.cryptography.memoryprotectionscope", "system.security.cryptography.memoryprotectionscope!", "Member[samelogon]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportrsapublickeypem].ReturnValue"]
    - ["system.object", "system.security.cryptography.oidenumerator", "Member[current]"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[d]"]
    - ["system.byte[]", "system.security.cryptography.slhdsa", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rsa", "Method[getmaxoutputsize].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsacryptoserviceprovider", "Method[signhash].ReturnValue"]
    - ["system.security.cryptography.ecdiffiehellmanpublickey", "system.security.cryptography.ecdiffiehellmancng", "Member[publickey]"]
    - ["system.boolean", "system.security.cryptography.safeevppkeyhandle", "Method[releasehandle].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cngalgorithm", "Method[gethashcode].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.frombase64transform", "Method[transformfinalblock].ReturnValue"]
    - ["system.string", "system.security.cryptography.mldsa", "Method[exportencryptedpkcs8privatekeypem].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.tripledescryptoserviceprovider", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[exportparameters].ReturnValue"]
    - ["system.security.accesscontrol.cryptokeysecurity", "system.security.cryptography.cspparameters", "Member[cryptokeysecurity]"]
    - ["system.boolean", "system.security.cryptography.rsasignaturepadding!", "Method[op_equality].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[trysigndatacore].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpaddingmode", "system.security.cryptography.rsaencryptionpadding", "Member[mode]"]
    - ["system.byte[]", "system.security.cryptography.ripemd160managed", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.safeevppkeyhandle!", "Method[openkeyfromprovider].ReturnValue"]
    - ["system.security.cryptography.cngprovider", "system.security.cryptography.cngprovider!", "Member[microsoftsmartcardkeystorageprovider]"]
    - ["system.string", "system.security.cryptography.cspkeycontainerinfo", "Member[providername]"]
    - ["system.security.cryptography.randomnumbergenerator", "system.security.cryptography.randomnumbergenerator!", "Method[create].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aesmanaged", "Member[legalkeysizes]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcertificatepolicy]"]
    - ["system.byte[]", "system.security.cryptography.dsacryptoserviceprovider", "Method[signdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mldsa", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importencapsulationkey].ReturnValue"]
    - ["system.string", "system.security.cryptography.mldsaalgorithm", "Member[name]"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmancng", "Method[exportparameters].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.keyedhashalgorithm", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.keyedhashalgorithm", "Member[keyvalue]"]
    - ["system.boolean", "system.security.cryptography.cngkey!", "Method[exists].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngalgorithm!", "Method[op_equality].ReturnValue"]
    - ["system.int32", "system.security.cryptography.passwordderivebytes", "Member[iterationcount]"]
    - ["system.string", "system.security.cryptography.signaturedescription", "Member[formatteralgorithm]"]
    - ["system.security.cryptography.ecdsa", "system.security.cryptography.ecdsa!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cryptographicattributeobjectcollection", "Member[count]"]
    - ["system.int32", "system.security.cryptography.mldsa", "Method[exportmldsasecretkey].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Member[signaturealgorithm]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngkey", "Member[algorithm]"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptcbccore].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Member[ciphertextsizeinbytes]"]
    - ["system.string", "system.security.cryptography.dsacryptoserviceprovider", "Member[keyexchangealgorithm]"]
    - ["system.boolean", "system.security.cryptography.rsasignaturepadding", "Method[equals].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngalgorithm", "Method[equals].ReturnValue"]
    - ["system.security.cryptography.cryptostreammode", "system.security.cryptography.cryptostreammode!", "Member[read]"]
    - ["system.byte[]", "system.security.cryptography.rsaoaepkeyexchangeformatter", "Method[createkeyexchange].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptcfbcore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptcfb].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[exportrsapublickey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha512!", "Method[tryhashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cngalgorithmgroup", "Method[gethashcode].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dataprotector", "Method[providerunprotect].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsaencryptionpadding!", "Method[op_inequality].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecalgorithm", "Method[exportecprivatekeypem].ReturnValue"]
    - ["system.threading.tasks.task", "system.security.cryptography.cryptostream", "Method[writeasync].ReturnValue"]
    - ["system.int32", "system.security.cryptography.icryptotransform", "Member[inputblocksize]"]
    - ["system.byte[]", "system.security.cryptography.asymmetrickeyexchangedeformatter", "Method[decryptkeyexchange].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha384!", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmanopenssl", "Method[derivekeymaterial].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[untrustedcertificationauthority]"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkeyusages!", "Member[none]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_384!", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.pemencoding!", "Method[writeutf8].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.rijndaelmanaged", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngexportpolicies!", "Member[allowplaintextarchiving]"]
    - ["system.boolean", "system.security.cryptography.mlkemopenssl", "Method[tryexportpkcs8privatekeycore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha512managed", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[prefervbs]"]
    - ["system.int32", "system.security.cryptography.hmacmd5!", "Member[hashsizeinbits]"]
    - ["system.byte[]", "system.security.cryptography.sha512cng", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importsubjectpublickeyinfo].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[hashdata].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptographicoperations!", "Method[hmacdataasync].ReturnValue"]
    - ["system.string", "system.security.cryptography.slhdsa", "Method[exportpkcs8privatekeypem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[exportparameters].ReturnValue"]
    - ["system.string", "system.security.cryptography.dataprotector", "Member[applicationname]"]
    - ["system.byte[]", "system.security.cryptography.rsaoaepkeyexchangeformatter", "Member[parameter]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aescryptoserviceprovider", "Member[legalblocksizes]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificatenotexplicitlytrusted]"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[tryencrypt].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hashalgorithm", "Method[transformfinalblock].ReturnValue"]
    - ["system.nullable", "system.security.cryptography.aesgcm", "Member[tagsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.aesmanaged", "Member[iv]"]
    - ["system.boolean", "system.security.cryptography.md5cryptoserviceprovider", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacryptoserviceprovider", "Method[verifyhash].ReturnValue"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.paddingmode!", "Member[none]"]
    - ["system.nullable", "system.security.cryptography.cngkeycreationparameters", "Member[keyusage]"]
    - ["system.int32", "system.security.cryptography.cryptostream", "Method[read].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[md5]"]
    - ["system.string", "system.security.cryptography.hmacsha1", "Member[hashname]"]
    - ["system.int32", "system.security.cryptography.rsa", "Method[signhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecpoint", "Member[y]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.hmacsha3_384!", "Method[hashdataasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[tryencryptecb].ReturnValue"]
    - ["system.string", "system.security.cryptography.cngprovider", "Member[provider]"]
    - ["system.security.cryptography.incrementalhash", "system.security.cryptography.incrementalhash", "Method[clone].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[trydecryptecb].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hashalgorithmname!", "Method[op_inequality].ReturnValue"]
    - ["system.int32", "system.security.cryptography.incrementalhash", "Method[gethashandreset].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.oidcollection", "Member[issynchronized]"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Member[hashsizevalue]"]
    - ["system.string", "system.security.cryptography.rsasignaturepadding", "Method[tostring].ReturnValue"]
    - ["system.security.cryptography.keysizes", "system.security.cryptography.aesccm!", "Member[noncebytesizes]"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngexportpolicies!", "Member[allowarchiving]"]
    - ["system.string", "system.security.cryptography.ecdiffiehellmanpublickey", "Method[toxmlstring].ReturnValue"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptostream", "Method[writeasync].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Member[hashsize]"]
    - ["system.boolean", "system.security.cryptography.mlkem", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha3_512]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp320t1]"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[encrypt].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.rfc2898derivebytes", "Member[hashalgorithm]"]
    - ["system.security.cryptography.kmacxof256", "system.security.cryptography.kmacxof256", "Method[clone].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.shake128!", "Member[issupported]"]
    - ["system.int32", "system.security.cryptography.ecdsaopenssl", "Member[keysize]"]
    - ["system.int32", "system.security.cryptography.hmacmd5!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.rsacng", "Member[legalkeysizes]"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.cngkey!", "Method[import].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmac", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.rsa", "system.security.cryptography.rsa!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rsa", "Method[signdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.kmac128!", "Member[issupported]"]
    - ["system.int32", "system.security.cryptography.aescryptoserviceprovider", "Member[feedbacksize]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[untrustedtestrootcertificate]"]
    - ["system.security.cryptography.rsasignaturepaddingmode", "system.security.cryptography.rsasignaturepaddingmode!", "Member[pkcs1]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdsap384]"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[signdatacore].ReturnValue"]
    - ["system.security.cryptography.keynumber", "system.security.cryptography.keynumber!", "Member[exchange]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_512!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.passwordderivebytes", "Method[getbytes].ReturnValue"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngalgorithmgroup!", "Member[rsa]"]
    - ["system.int32", "system.security.cryptography.sha256!", "Member[hashsizeinbytes]"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.cngkey!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha256", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.rsaparameters", "system.security.cryptography.rsacryptoserviceprovider", "Method[exportparameters].ReturnValue"]
    - ["system.object", "system.security.cryptography.oidcollection", "Member[syncroot]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aescryptoserviceprovider", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[importencryptedpkcs8privatekey].ReturnValue"]
    - ["system.string", "system.security.cryptography.dsacryptoserviceprovider", "Member[signaturealgorithm]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.tripledescng", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aesmanaged", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcertificateusage]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.descryptoserviceprovider", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.ecpoint", "system.security.cryptography.ecparameters", "Member[q]"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportencryptedpkcs8privatekeypem].ReturnValue"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[primeshortweierstrass]"]
    - ["system.string", "system.security.cryptography.cnguipolicy", "Member[description]"]
    - ["system.byte[]", "system.security.cryptography.kmacxof256", "Method[gethashandreset].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hkdf!", "Method[extract].ReturnValue"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_128s]"]
    - ["system.int32", "system.security.cryptography.hmacsha384", "Member[hashsize]"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[dp]"]
    - ["system.boolean", "system.security.cryptography.aesgcm!", "Member[issupported]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.dsa", "system.security.cryptography.dsa!", "Method[create].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.dsaopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.int32", "system.security.cryptography.asnencodeddatacollection", "Method[add].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.tripledes!", "Method[isweakkey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptostream", "Member[canseek]"]
    - ["system.byte[]", "system.security.cryptography.dsaopenssl", "Method[createsignature].ReturnValue"]
    - ["system.security.cryptography.sha512", "system.security.cryptography.sha512!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha512!", "Member[hashsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.hashalgorithm", "Member[hashvalue]"]
    - ["system.int32", "system.security.cryptography.rfc2898derivebytes", "Member[iterationcount]"]
    - ["system.security.cryptography.randomnumbergenerator", "system.security.cryptography.rsaoaepkeyexchangeformatter", "Member[rng]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.mactripledes", "Member[padding]"]
    - ["system.security.cryptography.keyedhashalgorithm", "system.security.cryptography.keyedhashalgorithm!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cngkeyblobformat", "Method[gethashcode].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Method[derivekeytls].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacryptoserviceprovider", "Method[decrypt].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdsa", "Method[toxmlstring].ReturnValue"]
    - ["system.security.cryptography.cngpropertyoptions", "system.security.cryptography.cngpropertyoptions!", "Member[none]"]
    - ["system.boolean", "system.security.cryptography.cngprovider", "Method[equals].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[eccprivateblob]"]
    - ["system.byte[]", "system.security.cryptography.ecpoint", "Member[x]"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[encryptcfb].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[sha256]"]
    - ["system.byte[]", "system.security.cryptography.dpapidataprotector", "Method[providerunprotect].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.tripledescryptoserviceprovider", "Member[mode]"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.ecdiffiehellmancngpublickey", "Member[blobformat]"]
    - ["system.byte[]", "system.security.cryptography.dsacng", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_512!", "Member[hashsizeinbits]"]
    - ["system.boolean", "system.security.cryptography.sha3_256!", "Method[tryhashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacmd5!", "Member[hashsizeinbytes]"]
    - ["system.string", "system.security.cryptography.cngkeyblobformat", "Method[tostring].ReturnValue"]
    - ["system.int32", "system.security.cryptography.slhdsa", "Method[exportslhdsasecretkey].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.ecdsaopenssl", "Member[legalkeysizes]"]
    - ["system.boolean", "system.security.cryptography.symmetricalgorithm", "Method[validkeysize].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[generictrustfailure]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[nistp256]"]
    - ["system.security.cryptography.tripledes", "system.security.cryptography.tripledes!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rsasignaturepadding", "Method[gethashcode].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacmd5", "Method[hashfinal].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsa", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[usedefaultkeycontainer]"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[signhash].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp192r1]"]
    - ["system.int32", "system.security.cryptography.cryptostream", "Method[readbyte].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_384", "Method[hashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.tripledes", "Member[key]"]
    - ["system.string", "system.security.cryptography.cngprovider", "Method[tostring].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportpkcs8privatekeypem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[verifydata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha3_384!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[publishermismatch]"]
    - ["system.boolean", "system.security.cryptography.slhdsa", "Method[verifydatacore].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Method[decryptcfb].ReturnValue"]
    - ["system.security.cryptography.dsaparameters", "system.security.cryptography.dsaopenssl", "Method[exportparameters].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_384", "Method[tryhashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mldsaalgorithm", "Member[secretkeysizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.dsacryptoserviceprovider", "Member[persistkeyincsp]"]
    - ["system.security.cryptography.mlkemalgorithm", "system.security.cryptography.mlkemalgorithm!", "Member[mlkem768]"]
    - ["system.object", "system.security.cryptography.asnencodeddataenumerator", "Member[current]"]
    - ["system.boolean", "system.security.cryptography.tripledescng", "Method[tryencryptcfbcore].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[pkcs8privateblob]"]
    - ["system.string", "system.security.cryptography.mlkem", "Method[exportencryptedpkcs8privatekeypem].ReturnValue"]
    - ["system.int32", "system.security.cryptography.pemfields", "Member[decodeddatalength]"]
    - ["system.security.cryptography.asnencodeddataenumerator", "system.security.cryptography.asnencodeddatacollection", "Method[getenumerator].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha3_512!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[sha1]"]
    - ["system.byte[]", "system.security.cryptography.sha512!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.mldsa", "Method[exportsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.cngkeyopenoptions", "system.security.cryptography.cngkeyopenoptions!", "Member[userkey]"]
    - ["system.security.cryptography.strongnamesignatureinformation", "system.security.cryptography.manifestsignatureinformation", "Member[strongnamesignature]"]
    - ["system.security.cryptography.cngalgorithmgroup", "system.security.cryptography.cngkey", "Member[algorithmgroup]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.symmetricalgorithm", "Method[createencryptor].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.slhdsa", "Method[exportsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[sha512]"]
    - ["system.byte[]", "system.security.cryptography.rsapkcs1keyexchangedeformatter", "Method[decryptkeyexchange].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rijndaelmanagedtransform", "Member[cantransformmultipleblocks]"]
    - ["system.security.cryptography.symmetricalgorithm", "system.security.cryptography.symmetricalgorithm!", "Method[create].ReturnValue"]
    - ["system.int32", "system.security.cryptography.keysizes", "Member[maxsize]"]
    - ["system.boolean", "system.security.cryptography.slhdsa", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.int64", "system.security.cryptography.cryptostream", "Method[seek].ReturnValue"]
    - ["system.object", "system.security.cryptography.asnencodeddatacollection", "Member[syncroot]"]
    - ["system.security.cryptography.oid", "system.security.cryptography.eccurve", "Member[oid]"]
    - ["system.int32", "system.security.cryptography.hmacsha1!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hashalgorithmname", "Method[gethashcode].ReturnValue"]
    - ["system.range", "system.security.cryptography.pemfields", "Member[label]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptostream", "Member[hasflushedfinalblock]"]
    - ["system.security.cryptography.dataprotector", "system.security.cryptography.dataprotector!", "Method[create].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecalgorithm", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha256", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.mactripledes", "Method[hashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.sha512!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngproperty!", "Method[op_inequality].ReturnValue"]
    - ["system.string", "system.security.cryptography.cngalgorithm", "Member[algorithm]"]
    - ["system.boolean", "system.security.cryptography.mlkemalgorithm!", "Method[op_inequality].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsacryptoserviceprovider", "Method[exportcspblob].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cryptostream", "Member[canwrite]"]
    - ["system.int32", "system.security.cryptography.keysizes", "Member[minsize]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.symmetricalgorithm", "Member[legalkeysizesvalue]"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha3_384]"]
    - ["system.int32", "system.security.cryptography.cngproperty", "Method[gethashcode].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Member[keysize]"]
    - ["system.byte[]", "system.security.cryptography.pkcs1maskgenerationmethod", "Method[generatemask].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[pkcs1]"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[decrypt].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidtimestamp]"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportsubjectpublickeyinfopem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[trydecryptcfbcore].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.pbeparameters", "Member[hashalgorithm]"]
    - ["system.security.cryptography.eckeyxmlformat", "system.security.cryptography.eckeyxmlformat!", "Member[rfc4050]"]
    - ["system.boolean", "system.security.cryptography.rsaopenssl", "Method[verifyhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecparameters", "Member[d]"]
    - ["system.security.cryptography.dsaparameters", "system.security.cryptography.dsacryptoserviceprovider", "Method[exportparameters].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp160t1]"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.symmetricalgorithm", "Member[paddingvalue]"]
    - ["system.boolean", "system.security.cryptography.incrementalhash", "Method[trygetcurrenthash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[trydecrypt].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[enhancedkeyusage]"]
    - ["system.string", "system.security.cryptography.rsa", "Method[exportrsaprivatekeypem].ReturnValue"]
    - ["system.security.cryptography.cngpropertyoptions", "system.security.cryptography.cngpropertyoptions!", "Member[customproperty]"]
    - ["system.byte[]", "system.security.cryptography.randomnumbergenerator!", "Method[getbytes].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricalgorithm", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellman", "Method[exportparameters].ReturnValue"]
    - ["system.threading.tasks.task", "system.security.cryptography.cryptostream", "Method[readasync].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cngkey", "Member[keysize]"]
    - ["system.string", "system.security.cryptography.cspparameters", "Member[keycontainername]"]
    - ["system.int32", "system.security.cryptography.rsa", "Method[decrypt].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hashalgorithm", "Method[computehash].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Member[decapsulationkeysizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportprivateseed].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.slhdsa", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsa", "Method[exportrsaprivatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.aescryptoserviceprovider", "Member[key]"]
    - ["system.security.cryptography.rsaencryptionpaddingmode", "system.security.cryptography.rsaencryptionpaddingmode!", "Member[pkcs1]"]
    - ["system.security.cryptography.mldsaalgorithm", "system.security.cryptography.mldsa", "Member[algorithm]"]
    - ["system.string", "system.security.cryptography.signaturedescription", "Member[deformatteralgorithm]"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[implicit]"]
    - ["system.security.cryptography.oid", "system.security.cryptography.oidenumerator", "Member[current]"]
    - ["system.security.cryptography.cngproperty", "system.security.cryptography.cngkey", "Method[getproperty].ReturnValue"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngkey", "Member[exportpolicy]"]
    - ["system.byte[]", "system.security.cryptography.eccurve", "Member[a]"]
    - ["system.int32", "system.security.cryptography.aesmanaged", "Member[feedbacksize]"]
    - ["system.int32", "system.security.cryptography.cryptographicoperations!", "Method[hmacdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[trysignhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rijndaelmanaged", "Member[key]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.asymmetricalgorithm", "Member[legalkeysizesvalue]"]
    - ["system.security.cryptography.cspkeycontainerinfo", "system.security.cryptography.dsacryptoserviceprovider", "Member[cspkeycontainerinfo]"]
    - ["system.boolean", "system.security.cryptography.eccurve", "Member[isprime]"]
    - ["system.int32", "system.security.cryptography.slhdsaalgorithm", "Member[publickeysizeinbytes]"]
    - ["system.boolean", "system.security.cryptography.rsapkcs1signaturedeformatter", "Method[verifysignature].ReturnValue"]
    - ["system.range", "system.security.cryptography.pemfields", "Member[base64data]"]
    - ["system.string", "system.security.cryptography.cryptoconfig!", "Method[mapnametooid].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[verifyhashcore].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mldsaalgorithm", "Member[signaturesizeinbytes]"]
    - ["system.int32", "system.security.cryptography.sha3_256!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.shake128", "Method[gethashandreset].ReturnValue"]
    - ["system.string", "system.security.cryptography.ecdiffiehellmancngpublickey", "Method[toxmlstring].ReturnValue"]
    - ["system.string", "system.security.cryptography.mlkemalgorithm", "Member[name]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.cryptographicoperations!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.ecdiffiehellmankeyderivationfunction", "system.security.cryptography.ecdiffiehellmankeyderivationfunction!", "Member[tls]"]
    - ["system.byte[]", "system.security.cryptography.sha3_256!", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.aescng", "Member[keysize]"]
    - ["system.boolean", "system.security.cryptography.frombase64transform", "Member[cantransformmultipleblocks]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.paddingmode!", "Member[ansix923]"]
    - ["system.boolean", "system.security.cryptography.cryptographicoperations!", "Method[tryhashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.oid", "Member[friendlyname]"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[verifyhashcore].ReturnValue"]
    - ["system.security.cryptography.rsaencryptionpadding", "system.security.cryptography.rsaencryptionpadding!", "Member[oaepsha1]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aesmanaged", "Member[legalblocksizes]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.aesmanaged", "Member[padding]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdiffiehellmanp521]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importmldsasecretkey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.mlkemalgorithm", "Member[sharedsecretsizeinbytes]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[basicconstraintsnotobserved]"]
    - ["system.string", "system.security.cryptography.cngkeyblobformat", "Member[format]"]
    - ["system.security.cryptography.keysizes", "system.security.cryptography.aesccm!", "Member[tagbytesizes]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.symmetricalgorithm", "Method[createdecryptor].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.ciphermode!", "Member[cbc]"]
    - ["system.security.cryptography.randomnumbergenerator", "system.security.cryptography.rsapkcs1keyexchangeformatter", "Member[rng]"]
    - ["system.int32", "system.security.cryptography.hashalgorithm", "Member[state]"]
    - ["system.security.cryptography.asnencodeddata", "system.security.cryptography.asnencodeddataenumerator", "Member[current]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[valid]"]
    - ["system.security.cryptography.rsasignaturepaddingmode", "system.security.cryptography.rsasignaturepadding", "Member[mode]"]
    - ["system.int32", "system.security.cryptography.aescryptoserviceprovider", "Member[blocksize]"]
    - ["system.int32", "system.security.cryptography.asnencodeddatacollection", "Member[count]"]
    - ["system.boolean", "system.security.cryptography.aescng", "Method[tryencryptcbccore].ReturnValue"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.rijndaelmanaged", "Member[legalkeysizes]"]
    - ["system.security.cryptography.cngkeyopenoptions", "system.security.cryptography.cngkeyopenoptions!", "Member[machinekey]"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.aescryptoserviceprovider", "Member[mode]"]
    - ["system.security.cryptography.rsaparameters", "system.security.cryptography.rsaopenssl", "Method[exportparameters].ReturnValue"]
    - ["system.int64", "system.security.cryptography.cryptostream", "Member[length]"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngexportpolicies!", "Member[allowplaintextexport]"]
    - ["system.security.cryptography.cngprovider", "system.security.cryptography.cngprovider!", "Member[microsoftsoftwarekeystorageprovider]"]
    - ["system.boolean", "system.security.cryptography.sha256managed", "Method[tryhashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha384managed", "Method[hashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecalgorithm", "Method[tryexportecprivatekey].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp160r1]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.aescryptoserviceprovider", "Member[legalkeysizes]"]
    - ["system.security.cryptography.cngprovider", "system.security.cryptography.cngprovider!", "Member[microsoftplatformcryptoprovider]"]
    - ["system.string", "system.security.cryptography.ecdsa", "Member[signaturealgorithm]"]
    - ["system.security.cryptography.ecdiffiehellmankeyderivationfunction", "system.security.cryptography.ecdiffiehellmankeyderivationfunction!", "Member[hash]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.strongnamesignatureinformation", "Member[verificationresult]"]
    - ["system.iasyncresult", "system.security.cryptography.cryptostream", "Method[beginwrite].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_256!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Method[derivekeyfromhmac].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[ecdsap256]"]
    - ["system.security.cryptography.cryptostreammode", "system.security.cryptography.cryptostreammode!", "Member[write]"]
    - ["system.byte[]", "system.security.cryptography.maskgenerationmethod", "Method[generatemask].ReturnValue"]
    - ["system.int32", "system.security.cryptography.randomnumbergenerator!", "Method[getint32].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha512", "Method[hashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha1!", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[decryptvalue].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacsha512!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.symmetricalgorithm", "Member[iv]"]
    - ["system.security.cryptography.oid", "system.security.cryptography.oid!", "Method[fromfriendlyname].ReturnValue"]
    - ["system.security.cryptography.pemfields", "system.security.cryptography.pemencoding!", "Method[find].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[containingsignatureinvalid]"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[trysignhash].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_384!", "Member[hashsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha256", "Method[hashfinal].ReturnValue"]
    - ["system.string", "system.security.cryptography.mldsa", "Method[exportpkcs8privatekeypem].ReturnValue"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.aesmanaged", "Method[createencryptor].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.asymmetricsignaturedeformatter", "Method[verifysignature].ReturnValue"]
    - ["system.int32", "system.security.cryptography.rc2cryptoserviceprovider", "Member[effectivekeysize]"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Method[exportsubjectpublickeyinfopem].ReturnValue"]
    - ["system.string", "system.security.cryptography.randomnumbergenerator!", "Method[gethexstring].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetricalgorithm", "Method[exportencryptedpkcs8privatekeypem].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsacng", "Method[verifysignature].ReturnValue"]
    - ["system.threading.tasks.task", "system.security.cryptography.cryptostream", "Method[flushasync].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsacng", "Method[verifyhash].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dataprotector", "Method[unprotect].ReturnValue"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.symmetricalgorithm", "Member[padding]"]
    - ["system.security.cryptography.cnguipolicy", "system.security.cryptography.cngkey", "Member[uipolicy]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[derivekeymaterial].ReturnValue"]
    - ["system.security.cryptography.ciphermode", "system.security.cryptography.ciphermode!", "Member[ofb]"]
    - ["system.security.cryptography.cnguiprotectionlevels", "system.security.cryptography.cnguipolicy", "Member[protectionlevel]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_256!", "Method[tryhashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.cngproperty", "Method[equals].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.cngproperty", "Method[getvalue].ReturnValue"]
    - ["system.int32", "system.security.cryptography.dsaparameters", "Member[counter]"]
    - ["system.int32", "system.security.cryptography.hmacsha3_256!", "Member[hashsizeinbytes]"]
    - ["system.byte[]", "system.security.cryptography.ecdsacng", "Method[hashdata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmac", "Member[blocksizevalue]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificateexpired]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificatemalformed]"]
    - ["system.security.cryptography.aes", "system.security.cryptography.aes!", "Method[create].ReturnValue"]
    - ["system.security.cryptography.ecpoint", "system.security.cryptography.eccurve", "Member[g]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[importmldsaprivateseed].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.ecdsacng", "Member[hashalgorithm]"]
    - ["system.security.cryptography.mldsa", "system.security.cryptography.mldsa!", "Method[generatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[encryptvalue].ReturnValue"]
    - ["system.string", "system.security.cryptography.cspparameters", "Member[providername]"]
    - ["system.security.cryptography.cngkeyhandleopenoptions", "system.security.cryptography.cngkeyhandleopenoptions!", "Member[ephemeralkey]"]
    - ["system.boolean", "system.security.cryptography.rsacryptoserviceprovider!", "Member[usemachinekeystore]"]
    - ["system.string", "system.security.cryptography.dataprotector", "Member[primarypurpose]"]
    - ["system.byte[]", "system.security.cryptography.asymmetricsignatureformatter", "Method[createsignature].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdiffiehellmancngpublickey", "Method[exportparameters].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha3_384!", "Member[issupported]"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspparameters", "Member[flags]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[assemblyidentitymismatch]"]
    - ["system.security.cryptography.slhdsa", "system.security.cryptography.slhdsa!", "Method[generatekey].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsaopenssl", "Method[exportexplicitparameters].ReturnValue"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve!", "Method[createfromfriendlyname].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha512managed", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha3_256!", "Member[issupported]"]
    - ["system.security.cryptography.icryptotransform", "system.security.cryptography.tripledescryptoserviceprovider", "Method[createencryptor].ReturnValue"]
    - ["system.security.cryptography.hashalgorithmname", "system.security.cryptography.hashalgorithmname!", "Member[sha1]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp224r1]"]
    - ["system.boolean", "system.security.cryptography.hmacsha1!", "Method[tryhashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rfc2898derivebytes", "Member[salt]"]
    - ["system.byte[]", "system.security.cryptography.asymmetricalgorithm", "Method[exportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.tripledescryptoserviceprovider", "Member[padding]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.dsaopenssl", "Member[legalkeysizes]"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.ecdiffiehellmancng", "Member[hashalgorithm]"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[requirevbs]"]
    - ["system.boolean", "system.security.cryptography.sha512cryptoserviceprovider", "Method[tryhashfinal].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha3_512!", "Method[hashdata].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.passwordderivebytes", "Method[cryptderivekey].ReturnValue"]
    - ["system.security.cryptography.cngexportpolicies", "system.security.cryptography.cngexportpolicies!", "Member[none]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellmancng", "Member[seed]"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[tryhashdata].ReturnValue"]
    - ["system.string", "system.security.cryptography.hashalgorithmname", "Member[name]"]
    - ["system.boolean", "system.security.cryptography.slhdsaopenssl", "Method[verifydatacore].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mlkem", "Method[tryexportsubjectpublickeyinfo].ReturnValue"]
    - ["system.security.cryptography.dsaparameters", "system.security.cryptography.dsacng", "Method[exportparameters].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecalgorithm", "Method[tryexportpkcs8privatekey].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[trysigndata].ReturnValue"]
    - ["system.security.cryptography.cngalgorithm", "system.security.cryptography.cngalgorithm!", "Member[md5]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[brainpoolp256r1]"]
    - ["system.security.cryptography.paddingmode", "system.security.cryptography.paddingmode!", "Member[pkcs7]"]
    - ["system.byte[]", "system.security.cryptography.ecdiffiehellman", "Method[deriverawsecretagreement].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dataprotector", "Method[isreprotectrequired].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[verifydata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.hmacsha384!", "Member[hashsizeinbits]"]
    - ["system.security.cryptography.mlkemalgorithm", "system.security.cryptography.mlkem", "Member[algorithm]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.dsacng", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_384!", "Method[hashdata].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.mldsa", "Method[verifydata].ReturnValue"]
    - ["system.security.cryptography.cspproviderflags", "system.security.cryptography.cspproviderflags!", "Member[useuserprotectedkey]"]
    - ["system.byte[]", "system.security.cryptography.ecdsa", "Method[exportecprivatekey].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.dsaopenssl", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.cnguipolicy", "system.security.cryptography.cngkeycreationparameters", "Member[uipolicy]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[publickeytokenmismatch]"]
    - ["system.boolean", "system.security.cryptography.hashalgorithmname", "Method[equals].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsacng", "Method[signhash].ReturnValue"]
    - ["system.security.cryptography.eccurve+eccurvetype", "system.security.cryptography.eccurve+eccurvetype!", "Member[named]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha384!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.frombase64transformmode", "system.security.cryptography.frombase64transformmode!", "Member[donotignorewhitespaces]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[unknowntrustprovider]"]
    - ["system.boolean", "system.security.cryptography.cryptographicattributeobjectenumerator", "Method[movenext].ReturnValue"]
    - ["system.security.cryptography.mldsaalgorithm", "system.security.cryptography.mldsaalgorithm!", "Member[mldsa44]"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkeyusages!", "Member[allusages]"]
    - ["system.boolean", "system.security.cryptography.aesccm!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.des", "Member[key]"]
    - ["system.byte[]", "system.security.cryptography.mlkem", "Method[exportpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[baddigest]"]
    - ["system.byte[]", "system.security.cryptography.sp800108hmaccounterkdf!", "Method[derivebytes].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.rsaparameters", "Member[q]"]
    - ["system.int64", "system.security.cryptography.cryptostream", "Member[position]"]
    - ["system.byte[]", "system.security.cryptography.aescng", "Member[key]"]
    - ["system.security.cryptography.cngkeyopenoptions", "system.security.cryptography.cngkeyopenoptions!", "Member[none]"]
    - ["system.string", "system.security.cryptography.rsa", "Member[keyexchangealgorithm]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeencryptionalgorithm!", "Member[unknown]"]
    - ["system.int32", "system.security.cryptography.rc2", "Member[effectivekeysize]"]
    - ["system.security.cryptography.mlkem", "system.security.cryptography.mlkem!", "Method[importfromencryptedpem].ReturnValue"]
    - ["system.int32", "system.security.cryptography.protecteddata!", "Method[unprotect].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.pemencoding!", "Method[trywrite].ReturnValue"]
    - ["system.security.cryptography.shake128", "system.security.cryptography.shake128", "Method[clone].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.sha1cryptoserviceprovider", "Method[tryhashfinal].ReturnValue"]
    - ["system.security.cryptography.cngkey", "system.security.cryptography.ecdiffiehellmancng", "Member[key]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeencryptionalgorithm!", "Member[tripledes3keypkcs12]"]
    - ["system.int32", "system.security.cryptography.frombase64transform", "Member[inputblocksize]"]
    - ["system.byte[]", "system.security.cryptography.asymmetrickeyexchangeformatter", "Method[createkeyexchange].ReturnValue"]
    - ["system.security.cryptography.hashalgorithm", "system.security.cryptography.hashalgorithm!", "Method[create].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.sha512cryptoserviceprovider", "Method[hashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dsa", "Method[trysigndata].ReturnValue"]
    - ["system.int32", "system.security.cryptography.tobase64transform", "Member[inputblocksize]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeparameters", "Member[encryptionalgorithm]"]
    - ["system.int32", "system.security.cryptography.cryptoapitransform", "Method[transformblock].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.pemencoding!", "Method[tryfind].ReturnValue"]
    - ["system.int32", "system.security.cryptography.cryptoapitransform", "Member[inputblocksize]"]
    - ["system.boolean", "system.security.cryptography.slhdsa", "Method[verifydata].ReturnValue"]
    - ["system.security.cryptography.cngkeycreationoptions", "system.security.cryptography.cngkeycreationoptions!", "Member[useperbootkey]"]
    - ["system.int32", "system.security.cryptography.slhdsaalgorithm", "Member[secretkeysizeinbytes]"]
    - ["system.security.cryptography.slhdsaalgorithm", "system.security.cryptography.slhdsaalgorithm!", "Member[slhdsasha2_128f]"]
    - ["system.boolean", "system.security.cryptography.ecdsacng", "Method[tryexportencryptedpkcs8privatekey].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificateusagenotallowed]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[certificateexplicitlydistrusted]"]
    - ["system.security.cryptography.ecdiffiehellman", "system.security.cryptography.ecdiffiehellman!", "Method[create].ReturnValue"]
    - ["system.string", "system.security.cryptography.asymmetrickeyexchangeformatter", "Member[parameters]"]
    - ["system.int32", "system.security.cryptography.keysizes", "Member[skipsize]"]
    - ["system.threading.tasks.valuetask", "system.security.cryptography.sha3_256!", "Method[hashdataasync].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcertificatesignature]"]
    - ["system.string", "system.security.cryptography.cnguipolicy", "Member[creationtitle]"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[invalidcertificatename]"]
    - ["system.int32", "system.security.cryptography.aesmanaged", "Member[blocksize]"]
    - ["system.boolean", "system.security.cryptography.cngkeyblobformat!", "Method[op_equality].ReturnValue"]
    - ["system.security.cryptography.oidgroup", "system.security.cryptography.oidgroup!", "Member[publickeyalgorithm]"]
    - ["system.security.cryptography.pbeencryptionalgorithm", "system.security.cryptography.pbeencryptionalgorithm!", "Member[aes192cbc]"]
    - ["system.string", "system.security.cryptography.rsacryptoserviceprovider", "Member[keyexchangealgorithm]"]
    - ["system.byte[]", "system.security.cryptography.hmacsha3_384", "Member[key]"]
    - ["system.boolean", "system.security.cryptography.hashalgorithmname!", "Method[tryfromoid].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.protecteddata!", "Method[tryprotect].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.ecdsa", "Method[verifydata].ReturnValue"]
    - ["system.security.cryptography.signatureverificationresult", "system.security.cryptography.signatureverificationresult!", "Member[revocationcheckfailure]"]
    - ["system.boolean", "system.security.cryptography.sha384managed", "Method[tryhashfinal].ReturnValue"]
    - ["system.byte[]", "system.security.cryptography.hmacmd5!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkeyusages!", "Member[decryption]"]
    - ["system.byte[]", "system.security.cryptography.hkdf!", "Method[derivekey].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[decryptcbc].ReturnValue"]
    - ["system.security.cryptography.ecparameters", "system.security.cryptography.ecdsa", "Method[exportparameters].ReturnValue"]
    - ["system.security.cryptography.safeevppkeyhandle", "system.security.cryptography.rsaopenssl", "Method[duplicatekeyhandle].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.icryptotransform", "Member[cantransformmultipleblocks]"]
    - ["system.security.cryptography.cngkeyusages", "system.security.cryptography.cngkeyusages!", "Member[signing]"]
    - ["system.boolean", "system.security.cryptography.hmacsha3_384!", "Member[issupported]"]
    - ["system.byte[]", "system.security.cryptography.kmacxof256!", "Method[hashdata].ReturnValue"]
    - ["system.security.cryptography.cngkeyblobformat", "system.security.cryptography.cngkeyblobformat!", "Member[eccfullpublicblob]"]
    - ["system.boolean", "system.security.cryptography.sha384cryptoserviceprovider", "Method[tryhashfinal].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.dpapidataprotector", "Method[isreprotectrequired].ReturnValue"]
    - ["system.int32", "system.security.cryptography.symmetricalgorithm", "Method[getciphertextlengthcfb].ReturnValue"]
    - ["system.string", "system.security.cryptography.rsacng", "Member[keyexchangealgorithm]"]
    - ["system.intptr", "system.security.cryptography.cngkey", "Member[parentwindowhandle]"]
    - ["system.security.cryptography.eccurve", "system.security.cryptography.eccurve+namedcurves!", "Member[nistp384]"]
    - ["system.int32", "system.security.cryptography.rijndaelmanaged", "Member[feedbacksize]"]
    - ["system.security.cryptography.keysizes[]", "system.security.cryptography.rsacryptoserviceprovider", "Member[legalkeysizes]"]
    - ["system.byte[]", "system.security.cryptography.ecdsaopenssl", "Method[signhash].ReturnValue"]
    - ["system.boolean", "system.security.cryptography.rsa", "Method[tryexportrsapublickey].ReturnValue"]
    - ["system.string", "system.security.cryptography.cngkey", "Member[keyname]"]
    - ["system.byte[]", "system.security.cryptography.protecteddata!", "Method[protect].ReturnValue"]
    - ["system.string", "system.security.cryptography.cnguipolicy", "Member[friendlyname]"]
